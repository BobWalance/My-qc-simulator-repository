
import numpy as np
import math
# GATE CREATION (single qubit gates)
#  A given controlled gate shall occupy on gate time to itself (for simplicity)
#  In Python, the imaginary number "i" is denoted as "1j"
sqrt2 = math.sqrt(2)

# identity matrix
# i = np.array ([[1,0],[0,1]])
i = np.array ([[1,0],[0,1]])

# Hadamard gate
h = np.array([[1/sqrt2,1/sqrt2],[1/sqrt2,-1/sqrt2]])

# Pauli-X gate
x = np.array ([[0,1],[1,0]])

# Pauli-Y gate
y = np.array ([[0,-1j],[1j,0]])

# Pauli-Z gate
z = np.array ([[1,0],[0,-1]])

# Phase (S or P) gate -- "s" is used on IBM's Quantum Composer
s = np.array ([[1,0],[0,1j]])
p = np.array ([[1,0],[0,1j]])
#
#
#

# GATE CREATION (full matrices that span all basis states)
#  NOT USED ANYMORE - the oracle matrix '0[]' is automatically created
#
# 3-25-2022 - A complete matrix.
# This one is a 3 qubit matrix for use in Grover's algorithm.
# It has a marker (or markers) (-1) that is to be found by the algorithm.
# O = np.array ([[1,0,0,0,0,0,0,0],
#                [0,1,0,0,0,0,0,0],
#                [0,0,-1,0,0,0,0,0],
#                [0,0,0,1,0,0,0,0],
#                [0,0,0,0,1,0,0,0],
#                [0,0,0,0,0,1,0,0],
#                [0,0,0,0,0,0,1,0],
#                [0,0,0,0,0,0,0,1]
#                ])

# 3-25-2022 - A complete matrix.
# This one is a 4 qubit matrix for use in Grover's algorithm.
# It has a marker (or markers) (-1) that is to be found by the algorithm.
# O = np.array ([[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
#                ])

# 3-25-2022 - A complete matrix.
# This one is a 5 qubit matrix for use in Grover's algorithm.
# It has a marker (or markers) (-1) that is to be found by the algorithm.
# O = np.array ([[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
#                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]     
#                ])
